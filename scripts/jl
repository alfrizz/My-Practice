#!/usr/bin/env bash
set -euo pipefail

# ──────────────────────────────────────────────────────────────────────────────
# 0) Paths & names
# ──────────────────────────────────────────────────────────────────────────────
PROJECT="/mnt/g/My Drive/Ingegneria/Data Science GD/My-Practice"
REQS="$PROJECT/scripts/requirements.txt"
CONTAINER="gpu-jl"

# ──────────────────────────────────────────────────────────────────────────────
# 1) Official NGC images
# ──────────────────────────────────────────────────────────────────────────────
TF_IMG="nvcr.io/nvidia/tensorflow:25.02-tf2-py3"
PT_IMG="nvcr.io/nvidia/pytorch:25.02-py3"

# ──────────────────────────────────────────────────────────────────────────────
# 2) Pick your container
# ──────────────────────────────────────────────────────────────────────────────
cat <<EOF

 Select container:
   1) TensorFlow (NGC, CUDA-12.x)
   2) PyTorch   (NGC, CUDA-12.x — assumed sm_120‐capable)

EOF
read -p " Choice [1/2]: " CHOICE
case "$CHOICE" in
  1) BASE_IMG="$TF_IMG" ;;
  2) BASE_IMG="$PT_IMG" ;;
  *) echo "Invalid choice" >&2; exit 1 ;;
esac

# ──────────────────────────────────────────────────────────────────────────────
# 3) Clean up any old container
# ──────────────────────────────────────────────────────────────────────────────
docker rm -f "$CONTAINER" 2>/dev/null || true

# ──────────────────────────────────────────────────────────────────────────────
# 4) Build a custom image from scripts/Dockerfile
# ──────────────────────────────────────────────────────────────────────────────
cd "$PROJECT"
docker build \
  --file scripts/Dockerfile \
  --build-arg BASE_IMAGE="$BASE_IMG" \
  --tag gpu-jl:custom \
  .

# ──────────────────────────────────────────────────────────────────────────────
# 5) Run & install-missing loop inside the new image
# ──────────────────────────────────────────────────────────────────────────────
docker run -d --gpus all \
  --name "$CONTAINER" \
  --shm-size=16G \
  --ipc=host \
  -v "$PROJECT:/workspace:rw" \
  -p 8888:8888 \
  gpu-jl:custom \
  bash -lc "\
    set -euo pipefail; \
    cd /workspace; \
    echo '🔎 Checking requirements…'; \
    grep -vE '^\s*(#|$)' scripts/requirements.txt \
      | while read -r line; do \
          pkg=\${line%%[=<>]*}; \
          if ! pip show \$pkg >/dev/null 2>&1; then \
            echo \"🔄 Installing \$line\"; \
            pip install --no-cache-dir \"\$line\"; \
          else \
            echo \"✅ Already installed: \$pkg\"; \
          fi; \
        done; \
    exec jupyter lab --no-browser --ServerApp.ip=0.0.0.0 --ServerApp.token=''; \
  "

# ──────────────────────────────────────────────────────────────────────────────
# 6) Print URL & tail logs
# ──────────────────────────────────────────────────────────────────────────────
echo; echo "🔗 http://localhost:8888"
docker logs -f "$CONTAINER"
