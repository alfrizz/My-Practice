With the docker ON:

alfrizz@alfrizz:~$ docker ps -s
CONTAINER ID   IMAGE           COMMAND                  CREATED      STATUS      PORTS                                       NAMES     SIZE
0f1f6423cb43   gpu-jl:latest   "/usr/local/bin/entr…"   8 days ago   Up 6 days   0.0.0.0:8888->8888/tcp, :::8888->8888/tcp   gpu-jl    593GB (virtual 619GB)

alfrizz@alfrizz:~$  docker exec -it 0f1f6423cb43 bash
root@0f1f6423cb43:/workspace#

alfrizz@alfrizz:~$  docker exec -it 0f1f6423cb43 bash
root@0f1f6423cb43:/workspace# du -xh / \
  | sort -hr \
  | head -n 2

576G    /
552G    /tmp


# Remove the temp folder (still inside the container)
rm -rf /tmp/*
du -sh /tmp 
exit

Check again outside the container:
docker ps -s

wsl --shutdown

Stop-Process -Name "Docker Desktop","vmmem","wslhost" -Force -ErrorAction SilentlyContinue

# in WSL:
sudo dd if=/dev/zero of=/zero.fill bs=50M status=progress || true
sudo sync
sudo rm /zero.fill
sudo sync

df -h /

# in Powershell:
dism.exe /online /disable-feature /featurename:VirtualMachinePlatform     /norestart
dism.exe /online /disable-feature /featurename:Microsoft-Windows-Subsystem-Linux /norestart
bcdedit /set hypervisorlaunchtype off

# Then REBOOT Windows

diskpart

select vdisk file="C:\Users\alfri\AppData\Local\Docker\wsl\disk\docker_data.vhdx"
attach vdisk readonly
compact vdisk
detach vdisk
exit

# restart them in Powershell
dism.exe /online /enable-feature  /featurename:Microsoft-Windows-Subsystem-Linux  /all /norestart
dism.exe /online /enable-feature  /featurename:VirtualMachinePlatform          /all /norestart
bcdedit /set hypervisorlaunchtype auto

# Then REBOOT Windows


-------------- or uninstall and reinstall docker desktop (only as last option) -------------------

Rebuild Your Exact gpu-jl Image from Your Saved Configs
You’ve got everything you need under \\wsl$\Ubuntu\home\alfrizz\my_practice\scripts. Here’s the 100 % safe, step‐by‐step to restore the exact same Docker image and run Jupyter Lab just like before.

1) Open a WSL (Ubuntu) Shell
You’re already working in WSL—just launch your Ubuntu terminal.

bash
wsl
2) Navigate to Your Project Folder
bash
cd ~/my_practice/scripts
This folder contains:

Dockerfile

docker-compose.yml

entrypoint.sh (make sure it’s executable)

requirements.txt

.dockerignore

pipreq (your helper script)

sync-practice.sh

my_practice.prf

3) (Re)Make Entrypoint Executable
bash
chmod +x entrypoint.sh

4A) If You Use Docker Compose
Simply rebuild and start all services with one command:

bash
docker-compose up -d --build
--build forces a fresh image build from your Dockerfile.

-d detaches, letting containers run in the background.

Once it’s up, your Jupyter Lab will be on http://localhost:8888 (check the token in the compose logs if you didn’t disable it).


